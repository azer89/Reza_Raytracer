<world>
	<!-- You need to specify the path of this xml file on XMLParser.cpp -->
	
	<camera>		
		<lookfrom	x="-0.1" y ="2" z="5.5"/>
		<lookat		x="-0.1" y ="0.0" z="-1.3"/>
		<vup		x="0" y ="1" z="0"/>
    <vfov		value="40"/>
    <aspect_ratio		x="16" y ="9"/>
	</camera>

	<!-- Requires two colors to create a color gradient -->
  <background_gradient>
		<color1 r="1.0" g ="1.0" b="1.0"/>
		<color2 r="0.5" g ="0.7" b="1.0"/>
	</background_gradient>

  <!-- In order to have light sources, you need to set the colors to be black -->
  <!--background_gradient>
		<color1 r="0.0" g ="0.0" b="0.0"/>
		<color2 r="0.0" g ="0.0" b="0.0"/>
	</background_gradient-->
	
	<renderer>
		<image_width value="2000"/>
		<samples_per_pixel value="50"/>
		<max_depth value="20"/>

    <!--Thin object padding (planes or triangles)-->
    <thin_padding value="0.00001"/>

    <!-- Minimum distance for ray intersections -->
    <min_t value="0.001"/>

    <!--
			if num_thread >  0 the program will use multiple threads.
      if num_thread =  1 the program will run on a single thread.
      if num_thread <= 0 the program will use max number of logical cpus.
    -->
		<num_thread value="0"/>
    
	</renderer>
  
  <textures>

    <!--Checker needs two colors and a frequency (how many tiles you get)-->
		<texture name="checkerA" type="checker2">
			<color1 r="0.7" g ="0.7" b="1.0"/>
			<color2 r="1.0" g ="1.0" b="1.0"/>
			<frequency value="2"/>
		</texture>
    
  </textures>
  
	<materials>
		<material name="material_ground" type="lambertian">
      <color r="1.0" g ="1.0" b="1.0"/>
		</material>

		<material name="material_metal" type="metal">
			<color r="0.7" g ="0.3" b="0.3"/>
			<fuzzy value="0.01"/>
		</material>

    <!-- you can assign a texture to a material -->
    <material name="material_checker" type="lambertian">
      <texture name="checkerA"/>
    </material>

		<material name="material_plastic" type="lambertian">
			<color	r="0.7" g ="0.3" b="0.3"/>
		</material>

    <material name="material_glass" type="dielectric">
      <color	r="0.1" g ="0.7" b="0.7"/>
      <refraction_index value="1.1"/>
    </material>

    <material name="material_light" type="diffuselight">
      <color	r="1.0" g ="1.0" b="1.0"/>
    </material>
    
	</materials>

  <objects>

    <object type="obj" 
				material_name="material_plastic" 
				filename="C://Users//azer//workspace//Reza_Raytracer//objs//stanford_bunny_vn_vt.obj">
			<position	x="0" y ="-0.52" z=" 0.4" />
			<scale	value="0.75" />
		</object>

    <object type="obj"
				material_name="material_plastic"
				filename="C://Users//azer//workspace//Reza_Raytracer//objs//stanford_bunny_vn_vt.obj">
      <position	x="-0.7" y ="-0.52" z="-1.1" />
      <scale	value="0.75" />
    </object>

    <object type="obj"
				material_name="material_plastic"
				filename="C://Users//azer//workspace//Reza_Raytracer//objs//stanford_bunny_vn_vt.obj">
      <position	x="0.7" y ="-0.52" z="-1.1" />
      <scale	value="0.75" />
    </object>

    <!--object type="sphere" radius="0.5" material_name="material_checker">
      <position	x="0" y ="0.0" z="-1"/>
    </object-->

    <object type="yzrect" material_name="material_ground">
      <boundary	y0="-1" y1="1" z0="-1" z1="1" x="-1.5"/>
    </object>

    <object type="xzrect" material_name="material_ground">
			<boundary	x0="-1" x1="1" z0="-2" z1="2" y="-0.5"/>
		</object>

    <object type="xyrect" material_name="material_ground">
      <boundary	x0="-1" x1="1" y0="-2" y1="2" z="-0.5"/>
    </object>


    <!--object type="sphere" radius="100" material_name="material_checker">
			<position	x="0" y ="-100.5" z="-1"/>
		</object-->
		
	</objects>
	
</world>